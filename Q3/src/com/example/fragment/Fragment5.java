package com.example.fragment;import java.util.ArrayList;import java.util.List;import org.apache.http.NameValuePair;import org.apache.http.message.BasicNameValuePair;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.Color;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.text.Spannable;import android.text.SpannableStringBuilder;import android.text.style.ForegroundColorSpan;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.ListView;import android.widget.ProgressBar;import android.widget.TextView;import android.widget.AdapterView.OnItemClickListener;import com.example.q3.DingDan;import com.example.q3.MyDingDan;import com.example.q3.R;import com.example.utils.Content;import com.lidroid.xutils.HttpUtils;import com.lidroid.xutils.exception.HttpException;import com.lidroid.xutils.http.RequestParams;import com.lidroid.xutils.http.ResponseInfo;import com.lidroid.xutils.http.callback.RequestCallBack;import com.lidroid.xutils.http.client.HttpRequest;import com.nostra13.universalimageloader.core.DisplayImageOptions;import com.nostra13.universalimageloader.core.ImageLoader;import com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer;public class Fragment5 extends Fragment{	protected ImageLoader imageLoader = ImageLoader.getInstance();	private View parentView;	private ListView mLv1;	private ProgressBar mPb1;	   private List<Data1> mlist =new ArrayList<Fragment5.Data1>();	   private Myadapter adapter;	private DisplayImageOptions options;	private ForegroundColorSpan redSpan;	@Override	@Nullable	public View onCreateView(LayoutInflater inflater,			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {		parentView = inflater.inflate(R.layout.fragment5, container, false);		mLv1 =(ListView) parentView.findViewById(R.id.mLv1);		mPb1 =(ProgressBar)parentView.findViewById(R.id.mPb1);		mPb1.setVisibility(View.GONE);		mLv1.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> parent, View view,					int position, long id) {          startActivity(new Intent(getActivity(), MyDingDan.class));			}		});		 redSpan = new ForegroundColorSpan(Color.RED);  		 initData();		return parentView;	}	private void initData() {	downsearchdata("0");}public void downsearchdata(String ss){	mPb1.setVisibility(View.VISIBLE);	 RequestParams params = new RequestParams();   List<NameValuePair> nameValuePairs=new ArrayList<NameValuePair>(10);   nameValuePairs.add(new BasicNameValuePair("userid", 184+""));   params.addBodyParameter(nameValuePairs);   HttpUtils http = new HttpUtils();   http.send(HttpRequest.HttpMethod.POST,  		 "http://pine.i3.com.hk/q3/json/yhorderlist.php",           params,           new RequestCallBack<String>() {				private String msg;				@Override				public void onFailure(HttpException arg0, String arg1) {									}				@Override				public void onSuccess(ResponseInfo<String> arg0) {					JSONObject jsonObject;					try {						jsonObject = new JSONObject(arg0.result);						String string_code = jsonObject.getString("code");						 msg = jsonObject.getString("msg");												 int  num_code=Integer.valueOf(string_code);						 if (num_code==1) {							 //保存到本地							 mlist.clear();							 JSONArray array = jsonObject.getJSONArray("data");							 for(int i=0;i<array.length();i++){								 Data1 d1 =new Data1();								 d1.number=array.getJSONObject(i).getString("number");								 d1.time=array.getJSONObject(i).getString("time");								 d1.type=array.getJSONObject(i).getString("type");								 d1.zongjia=array.getJSONObject(i).getString("zongjia");								 d1.ChannelID=array.getJSONObject(i).getString("ChannelID");								 d1.UserNo=array.getJSONObject(i).getString("UserNo");								 d1.CompanyPhoto=array.getJSONObject(i).getString("CompanyPhoto");								 mlist.add(d1);							 }							 mPb1.setVisibility(View.GONE);                            initd1a();						 }						 else {									mPb1.setVisibility(View.GONE);						}					} catch (JSONException e) {						mPb1.setVisibility(View.GONE);					}				}				private void initd1a() {						adapter =new Myadapter();					mLv1.setAdapter(adapter);}   });}class Data1 {	public String 	number;	public String 	time;	public String  type;	public String  	zongjia;	public String  ChannelID;	public String 	UserNo;	public String CompanyPhoto;}	class Holder{		TextView mTv3,mTv4,mTv5,mTv6,mTv7,mTv2;		ImageView mIv1,mIv3;	}	class  Myadapter extends   BaseAdapter{		@Override		public View getView(int position, View convertView, ViewGroup parent) {			        						Holder holder = null;			if(convertView==null){				convertView = LayoutInflater.from(getActivity())						.inflate(R.layout.item_listview_3, null);				holder = new Holder();				holder.mIv1 =(ImageView)convertView.findViewById(R.id.mIv1);				holder.mTv3 =(TextView)convertView.findViewById(R.id.mTv3);				holder.mTv2 =(TextView)convertView.findViewById(R.id.mTv2);				holder.mTv4 =(TextView)convertView.findViewById(R.id.mTv4);				holder.mTv5 =(TextView)convertView.findViewById(R.id.mTv5);				holder.mTv6 =(TextView)convertView.findViewById(R.id.mTv6);				holder.mTv7 =(TextView)convertView.findViewById(R.id.mTv7);								convertView.setTag(holder);			}else{				holder =(Holder)convertView.getTag();			}						initImageLoaderOptions();			imageLoader.displayImage(Content.ImageUrl+mlist.get(position).CompanyPhoto,holder.mIv1, options);			holder.mTv2.setText(mlist.get(position).number);						SpannableStringBuilder builder = new SpannableStringBuilder("HK$"+mlist.get(position).zongjia);  			if(mlist.get(position).zongjia.length()>0){			builder.setSpan(redSpan,mlist.get(position).zongjia.length(), 3+mlist.get(position).zongjia.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);  			}			holder.mTv3.setText(builder);			holder.mTv4.setText(mlist.get(position).ChannelID);			holder.mTv5.setText(mlist.get(position).time);			holder.mTv6.setText(mlist.get(position).UserNo);			holder.mTv2.setText(mlist.get(position).number);			if(mlist.get(position).type.equals("1")){			holder.mTv7.setText(R.string.c38);			}			if(mlist.get(position).type.equals("2")){			holder.mTv7.setText(R.string.c39);			}			if(mlist.get(position).type.equals("3")){			holder.mTv7.setText(R.string.c40);			}			if(mlist.get(position).type.equals("4")){			holder.mTv7.setText(R.string.c41);			}			if(mlist.get(position).type.equals("5")){			holder.mTv7.setText(R.string.c42);			}						return convertView;		}		@Override		public int getCount() {			// TODO Auto-generated method stub			return mlist.size();		}		@Override		public Object getItem(int position) {			// TODO Auto-generated method stub			return null;		}		@Override		public long getItemId(int position) {			// TODO Auto-generated method stub			return 0;		}	}	private void initImageLoaderOptions() {		options = new DisplayImageOptions.Builder()				.showImageForEmptyUri(R.drawable.aaa)				.cacheInMemory()				.cacheOnDisc().displayer(new FadeInBitmapDisplayer(2000))				.bitmapConfig(Bitmap.Config.RGB_565).build();	}}